trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '15.x'
  displayName: 'Install Node.js'

- task: DownloadSecureFile@1
  name: firebaseconfig
  displayName: 'Download Firebase Config'
  inputs:
    secureFile: 'firebase-config.json'

- script: |
    cp $(firebaseconfig.secureFilePath) $(Build.Repository.LocalPath)/src/
  displayName: 'Copy Firebase Config'

- script: |
    npm --prefix ./taroread-native install
    npm --prefix ./taroread-native run build
  displayName: 'Taroread native npm install and build'

- script: |
    npm install
    npm run fetch-metadata
    npm run generate-routes
    npm run build
    npm run generate-android 
  displayName: 'npm install and build'

- task: android-manifest-version@1
  inputs:
    sourcePath: $(Build.Repository.LocalPath)/android/app/src/main/AndroidManifest.xml
  displayName: "Update Taroread version code"

- task: Gradle@2
  inputs:
    workingDirectory: $(Build.Repository.LocalPath)/android/
    gradleWrapperFile: $(Build.Repository.LocalPath)/android/gradlew
    publishJUnitResults: false
    tasks: 'build -x :capacitor-android:lint'
  displayName: "Build APK"

- task: AndroidSigning@3
  inputs:
    apkFiles: $(Build.Repository.LocalPath)/android/app/build/outputs/apk/debug/app-debug.apk 
    apksign: true # Optional
    apksignerKeystoreFile: taroread.keystore
    apksignerKeystorePassword: $(keystoreDebugPassword)
    apksignerKeystoreAlias: taroread
    apksignerKeyPassword: $(keystoreDebugPassword)

- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: AppCenter
    appSlug: Brannen/Taroread-Android 
    appFile: $(Build.Repository.LocalPath)/android/app/build/outputs/apk/debug/app-debug.apk
    releaseNotesOption: 'input' 
    releaseNotesInput: 'Debug'
  displayName: "Distribute to AppCenter"